{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red60\green64\blue68;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c30196\c31765\c33725;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww27120\viewh15360\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf0 CURSO JAVA\
\
// : Colocar un comentario simple\
\
VARIABLES EN JAVA\
\
Una variable nos va a permitir guardar informaci\'f3n esta ser\'e1n los datos que vamos a procesar en el programa. Estos datos pueden variar dependiendo de la informacion que estemos recibiendo por parte del usuario o la informaci\'f3n que estemos procesando.\
\
Una variable tiene un identificador y va almacenar un valor pero dicho valor puede variar a media que pase el tiempo.\
\
Pueden almacenar distintos tipos de datos como por ejemplo: Numeros, Texto o cadenas, referencias o objetos.\
\
TIPOS DE DATOS PRIMITIVOS\
\
Tipos Enteros :  int  asigna  n\'fameros enteros,\
\
Tipos Flotantes: \
\
STRING : Es una clase de java, que nos permite asignar cadenas \
\
Cuando la variable ya esta definida , no hay que volver al colocar el tipo de dato.\
\
VAR : Palabra reservada, inferencia de tipo por depende del valor literal que se le asigne define la variable. Esta esta disponible desde la versi\'f3n 10 de java\
\
\
\
REGLAS PARA DEFINIR UNA VARIABLE EN JAVA.\
\
1. El primer car\'e1cter de la variable debe ir en min\'fascula , y no se pueden usar n\'fameros como primer car\'e1cter.\
\
2. No es tan  com\'fan pero esta permitido iniciar el nombre de una variable con  un guion bajo ( _ ) o el signo de pesos ( $ ).\
\
3. Si queremos usar acentos en las variables , es posible pero no es recomendable. (\'e1Variable) debido a que puede generar problemas por el juego de caracteres que se esta utilizando.\
\
4. Si usamos el s\'edmbolo ( # ) nos arrojara que no esta permitido utilizarlo para declarar una variable.\
\
CONCATENACION DE CADENAS EN JAVA.\
\
1. El operador de ( + ) nos permite concatenar cadenas.\
\
2. Si en la operaci\'f3n se encuentra primero una operaci\'f3n de n\'fameros, primero realizara la operaci\'f3n y luego mostrara la cadena.\
\
3. Si en la operaci\'f3n se encuentra primero una cadena , todos los valores se tomaran como cadena. Esto se le conoce como contexto cadena.\
\
4. Si queremos que se realice la operaci\'f3n simplemente agregamos  par\'e9ntesis a los n\'fameros donde se realizara dicha operaci\'f3n.\
 \
\
PALABRAS RESERVADAS EN JAVA.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Pasted Graphic.tiff \width14240 \height5460 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\
CARACTERES ESPECIALES EN JAVA\
\
1.Salto de linea :  (
\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\\
\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 n
\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
)
\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
2. Tabulador :  Es un espacio definido  a partir del ultimo car\'e1cter  (
\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\\
\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 t
\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
)\

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 3. Retroceso : (
\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\\
\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 b)\
4. Comilla Simple : (
\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\\
\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  \'91 \'93 + nombre + \'93 
\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\\ 
\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \'91 \'93 )\
5. Comilla Doble : (
\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\\
\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  \'93 \'93 + nombre + \'93 
\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\\ 
\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \'93 \'93 ) debemos colocar la diagonal inversa debido a que si solo colocamos las comillas dobles el programa lo tomara como que la cadena a terminado\
   \
CLASE SCANNER EN JAVA\
\
Esta clase nos permite leer informaci\'f3n de la consola\
\
Metodo NextLine\
\
TIPOS PRIMITIVOS ENTEROS.\
\
 1. Tipos primitivos que almacenan  solamente enteros :\
- Byte : Es el tipo mas peque\'f1o 8  bits\
- Short :  16 bites\
- Long : 64 bites\
- Int : 32 bites \
\
El que mas usaremos ser\'e1 el tipo int debido a que las CPU son de 32 a 64 bits , si queremos ahorrar la mayor cantidad de espacio normalmente usaremos tipos enteros.\
\
Los tipos enteros no solo almacenan valores positivos, sino, que tambi\'e9n pueden almacenar valores negativos.\
\
Cuando superemos el valor de un tipo entero (Int) este no se solucionara realizando una conversi\'f3n debido a que  las literales son de tipo entero , es decir, ya estamos sobrepasado el valor m\'e1ximo de la literal de tipo entero. La soluci\'f3n es usar una  literal de tipo Long , colocando una L al final.  \
\
 2. Tipos primitivos que almacenan solamente tipos flotantes. \
  \
TIPOS PRIMITIVOS FLOTANTES.\
\
- Double : 64 bites\
- Float : 32 bites , puede almacenar valores mas  grande que un tipo long o int.\
\
Las literales de punto flotante en Java por defecto son de tipo double.  Para corregir ese error podemos indicar F junto a la literal.\
\
TIPO PRIMITIVO CHAR\
\
CHAR : Tiene la caracter\'edstica que es solo un car\'e1cter es decir solo puede almacenar un car\'e1cter  . Para utilizar un car\'e1cter en java lo hacemos con comilla simple ejemplo : \'91a\'92\
\
El tipo Char tiene 16 bites este puede almacenar  un car\'e1cter como valores decimales.\
\
Los caracteres se rigen por una linea de caracteres los mas comunes son los unicode. Para hacer uso de alg\'fan car\'e1cter unicode en java colocamos (
\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\\
\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 u)\
\
https://en.wikipedia.org/wiki/List_of_Unicode_characters\
\
Para hacer uso de la palabra reservada VAR debemos tener en cuenta que si colocamos el valor decimal de unicode este lo va tomar como un valor literal interno y no como tipo char.\
\
Cuando se asigna un car\'e1cter de tipo char a un int este de manera autom\'e1tica nos mostraba su tipo en forma decimal.\
\
TIPO BOOLEAN\
\
Un tipo boolean o tipo bandera en java almacena los valores \'fanicamente de falso o verdadero \
\
OPERADORES EN JAVA\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic 1__#$!@%!#__Pasted Graphic.tiff \width12980 \height5240 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\
\
OPERADORES ARITMETICOS \
\
PRECEDENCIA DE OPERADORES.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic 2__#$!@%!#__Pasted Graphic.tiff \width8260 \height9320 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
SETENCIA DE CONTROL IF/ELSE\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Pasted Graphic 1.tiff \width9700 \height7580 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\
\
\
}